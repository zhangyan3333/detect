<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjj.detect.dao.PgRecordDao">

    <!--<editor-fold desc="ResultMap区，此为代码自动生成区，为防止您的代码丢失，请勿在此区域内添加手动代码">-->

    <resultMap id="pgRecordDefaultMapping" type="com.bjj.detect.entity.PgRecord">
        <result column="c_id" property="id"/>
        <result column="c_createtime" property="createTime"/>
        <result column="c_mid" property="mid"/>
        <result column="c_detectcode" property="detectCode"/>
        <result column="c_metercustomer" property="meterCustomer"/>
        <result column="c_metercode" property="meterCode"/>
        <result column="c_meterrangel" property="meterRangeL"/>
        <result column="c_meterrangeh" property="meterRangeH"/>
        <result column="c_meterresolution" property="meterResolution"/>
        <result column="c_meterdivisionno" property="meterDivisionNo"/>
        <result column="c_meterfactory" property="meterFactory"/>
        <result column="c_sname" property="sname"/>
        <result column="c_scode" property="scode"/>
        <result column="c_srangel" property="sRangeL"/>
        <result column="c_srangeh" property="sRangeH"/>
        <result column="c_sresolution" property="sResolution"/>
        <result column="c_standardmedium" property="standardMedium"/>
        <result column="c_standardloc" property="standardLoc"/>
        <result column="c_sedate" property="sEdate"/>
        <result column="c_sbasis" property="sBasis"/>
        <result column="c_stemperature" property="sTemperature"/>
        <result column="c_shumidity" property="sHumidity"/>
        <result column="c_sregulatecode" property="sRegulateCode"/>
        <result column="c_sfactory" property="sFactory"/>
        <result column="c_sregulatebcode" property="sRegulateBcode"/>
        <result column="c_sbdate" property="sBdate"/>
        <result column="c_appearance" property="appearance"/>
        <result column="c_pointer" property="pointer"/>
        <result column="c_indicationerrormax" property="indicationErrorMax"/>
        <result column="c_returnerrormax" property="returnErrorMax"/>
        <result column="c_positionmax" property="positionMax"/>
        <result column="c_indicationerrorpermit" property="indicationErrorPermit"/>
        <result column="c_returnerrorpermit" property="returnErrorPermit"/>
        <result column="c_positionpermit" property="positionPermit"/>
        <result column="c_indicationerrorupper" property="indicationErrorUpper"/>
        <result column="c_returnerrorupper" property="returnErrorUpper"/>
        <result column="c_positionupper" property="positionUpper"/>
        <result column="c_indicationerrorupperpermit" property="indicationErrorUpperPermit"/>
        <result column="c_returnerrorupperpermit" property="returnErrorUpperPermit"/>
        <result column="c_positionupperpermit" property="positionUpperPermit"/>
        <result column="c_detectresult" property="detectResult"/>
        <result column="c_detectlevel" property="detectLevel"/>
        <result column="c_remark" property="remark"/>
        <result column="c_inspector" property="inspector"/>
        <result column="c_verifier" property="verifier"/>
        <result column="c_approver" property="approver"/>
        <result column="c_detecttime" property="detectTime"/>
        <result column="c_checkstep" property="checkStep"/>
        <result column="c_resultid" property="resultId"/>
        <result column="c_metername" property="meterName"/>
        <result column="c_metertype" property="meterType"/>
        <result column="c_resultfile" property="resultFile"/>
        <result column="c_recordfile" property="recordFile"/>
        <result column="c_imgpath1" property="imgPath1"/>
        <result column="c_imgpath2" property="imgPath2"/>
        <result column="c_imgpath3" property="imgPath3"/>
    </resultMap>

    <!--</editor-fold>-->

    <!--<editor-fold desc="Sql区，此为代码自动生成区，为防止您的代码丢失，请勿在此区域内添加手动代码">-->

    <insert id="insert" parameterType="com.bjj.detect.entity.PgRecord">
        INSERT INTO t_pgrecord
            (c_id,c_createtime,c_mid,c_detectcode,c_metercustomer,c_metercode,c_meterrangel,c_meterrangeh,c_meterresolution,c_meterdivisionno,c_meterfactory,c_sname,c_scode,c_srangel,c_srangeh,c_sresolution,c_standardmedium,c_standardloc,c_sedate,c_sbasis,c_stemperature,c_shumidity,c_sregulatecode,c_sfactory,c_sregulatebcode,c_sbdate,c_appearance,c_pointer,c_indicationerrormax,c_returnerrormax,c_positionmax,c_indicationerrorpermit,c_returnerrorpermit,c_positionpermit,c_indicationerrorupper,c_returnerrorupper,c_positionupper,c_indicationerrorupperpermit,c_returnerrorupperpermit,c_positionupperpermit,c_detectresult,c_detectlevel,c_remark,c_inspector,c_verifier,c_approver,c_detecttime,c_checkstep,c_resultid,c_metername,c_metertype,c_resultfile,c_recordfile,c_imgpath1,c_imgpath2,c_imgpath3)
        VALUES
            (#{id},#{createTime},#{mid},#{detectCode},#{meterCustomer},#{meterCode},#{meterRangeL},#{meterRangeH},#{meterResolution},#{meterDivisionNo},#{meterFactory},#{sname},#{scode},#{sRangeL},#{sRangeH},#{sResolution},#{standardMedium},#{standardLoc},#{sEdate},#{sBasis},#{sTemperature},#{sHumidity},#{sRegulateCode},#{sFactory},#{sRegulateBcode},#{sBdate},#{appearance},#{pointer},#{indicationErrorMax},#{returnErrorMax},#{positionMax},#{indicationErrorPermit},#{returnErrorPermit},#{positionPermit},#{indicationErrorUpper},#{returnErrorUpper},#{positionUpper},#{indicationErrorUpperPermit},#{returnErrorUpperPermit},#{positionUpperPermit},#{detectResult},#{detectLevel},#{remark},#{inspector},#{verifier},#{approver},#{detectTime},#{checkStep},#{resultId},#{meterName},#{meterType},#{resultFile},#{recordFile},#{imgPath1},#{imgPath2},#{imgPath3})
    </insert>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO t_pgrecord
            (c_id,c_createtime,c_mid,c_detectcode,c_metercustomer,c_metercode,c_meterrangel,c_meterrangeh,c_meterresolution,c_meterdivisionno,c_meterfactory,c_sname,c_scode,c_srangel,c_srangeh,c_sresolution,c_standardmedium,c_standardloc,c_sedate,c_sbasis,c_stemperature,c_shumidity,c_sregulatecode,c_sfactory,c_sregulatebcode,c_sbdate,c_appearance,c_pointer,c_indicationerrormax,c_returnerrormax,c_positionmax,c_indicationerrorpermit,c_returnerrorpermit,c_positionpermit,c_indicationerrorupper,c_returnerrorupper,c_positionupper,c_indicationerrorupperpermit,c_returnerrorupperpermit,c_positionupperpermit,c_detectresult,c_detectlevel,c_remark,c_inspector,c_verifier,c_approver,c_detecttime,c_checkstep,c_resultid,c_metername,c_metertype,c_resultfile,c_recordfile,c_imgpath1,c_imgpath2,c_imgpath3)
        VALUES
        <foreach collection="pgRecords" item="item" separator=",">
            (#{item.id},#{item.createTime},#{item.mid},#{item.detectCode},#{item.meterCustomer},#{item.meterCode},#{item.meterRangeL},#{item.meterRangeH},#{item.meterResolution},#{item.meterDivisionNo},#{item.meterFactory},#{item.sname},#{item.scode},#{item.sRangeL},#{item.sRangeH},#{item.sResolution},#{item.standardMedium},#{item.standardLoc},#{item.sEdate},#{item.sBasis},#{item.sTemperature},#{item.sHumidity},#{item.sRegulateCode},#{item.sFactory},#{item.sRegulateBcode},#{item.sBdate},#{item.appearance},#{item.pointer},#{item.indicationErrorMax},#{item.returnErrorMax},#{item.positionMax},#{item.indicationErrorPermit},#{item.returnErrorPermit},#{item.positionPermit},#{item.indicationErrorUpper},#{item.returnErrorUpper},#{item.positionUpper},#{item.indicationErrorUpperPermit},#{item.returnErrorUpperPermit},#{item.positionUpperPermit},#{item.detectResult},#{item.detectLevel},#{item.remark},#{item.inspector},#{item.verifier},#{item.approver},#{item.detectTime},#{item.checkStep},#{item.resultId},#{item.meterName},#{item.meterType},#{item.resultFile},#{item.recordFile},#{item.imgPath1},#{item.imgPath2},#{item.imgPath3})
        </foreach>
    </insert>

    <update id="update" parameterType="com.bjj.detect.entity.PgRecord">
        UPDATE t_pgrecord
        SET c_mid=#{mid},c_detectcode=#{detectCode},c_metercustomer=#{meterCustomer},c_metercode=#{meterCode},c_meterrangel=#{meterRangeL},c_meterrangeh=#{meterRangeH},c_meterresolution=#{meterResolution},c_meterdivisionno=#{meterDivisionNo},c_meterfactory=#{meterFactory},c_sname=#{sname},c_scode=#{scode},c_srangel=#{sRangeL},c_srangeh=#{sRangeH},c_sresolution=#{sResolution},c_standardmedium=#{standardMedium},c_standardloc=#{standardLoc},c_sedate=#{sEdate},c_sbasis=#{sBasis},c_stemperature=#{sTemperature},c_shumidity=#{sHumidity},c_sregulatecode=#{sRegulateCode},c_sfactory=#{sFactory},c_sregulatebcode=#{sRegulateBcode},c_sbdate=#{sBdate},c_appearance=#{appearance},c_pointer=#{pointer},c_indicationerrormax=#{indicationErrorMax},c_returnerrormax=#{returnErrorMax},c_positionmax=#{positionMax},c_indicationerrorpermit=#{indicationErrorPermit},c_returnerrorpermit=#{returnErrorPermit},c_positionpermit=#{positionPermit},c_indicationerrorupper=#{indicationErrorUpper},c_returnerrorupper=#{returnErrorUpper},c_positionupper=#{positionUpper},c_indicationerrorupperpermit=#{indicationErrorUpperPermit},c_returnerrorupperpermit=#{returnErrorUpperPermit},c_positionupperpermit=#{positionUpperPermit},c_detectresult=#{detectResult},c_detectlevel=#{detectLevel},c_remark=#{remark},c_inspector=#{inspector},c_verifier=#{verifier},c_approver=#{approver},c_detecttime=#{detectTime},c_checkstep=#{checkStep},c_resultid=#{resultId},c_metername=#{meterName},c_metertype=#{meterType},c_resultfile=#{resultFile},c_recordfile=#{recordFile},c_imgpath1=#{imgPath1},c_imgpath2=#{imgPath2},c_imgpath3=#{imgPath3}
        WHERE c_id=#{id}
    </update>

    <update id="updateAll" parameterType="java.util.List">
        UPDATE t_pgrecord SET 
            c_mid = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.mid}
            </foreach>
            END
            ,c_detectcode = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.detectCode}
            </foreach>
            END
            ,c_metercustomer = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterCustomer}
            </foreach>
            END
            ,c_metercode = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterCode}
            </foreach>
            END
            ,c_meterrangel = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterRangeL}
            </foreach>
            END
            ,c_meterrangeh = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterRangeH}
            </foreach>
            END
            ,c_meterresolution = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterResolution}
            </foreach>
            END
            ,c_meterdivisionno = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterDivisionNo}
            </foreach>
            END
            ,c_meterfactory = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterFactory}
            </foreach>
            END
            ,c_sname = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sname}
            </foreach>
            END
            ,c_scode = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.scode}
            </foreach>
            END
            ,c_srangel = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sRangeL}
            </foreach>
            END
            ,c_srangeh = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sRangeH}
            </foreach>
            END
            ,c_sresolution = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sResolution}
            </foreach>
            END
            ,c_standardmedium = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.standardMedium}
            </foreach>
            END
            ,c_standardloc = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.standardLoc}
            </foreach>
            END
            ,c_sedate = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sEdate}
            </foreach>
            END
            ,c_sbasis = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sBasis}
            </foreach>
            END
            ,c_stemperature = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sTemperature}
            </foreach>
            END
            ,c_shumidity = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sHumidity}
            </foreach>
            END
            ,c_sregulatecode = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sRegulateCode}
            </foreach>
            END
            ,c_sfactory = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sFactory}
            </foreach>
            END
            ,c_sregulatebcode = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sRegulateBcode}
            </foreach>
            END
            ,c_sbdate = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.sBdate}
            </foreach>
            END
            ,c_appearance = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.appearance}
            </foreach>
            END
            ,c_pointer = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.pointer}
            </foreach>
            END
            ,c_indicationerrormax = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.indicationErrorMax}
            </foreach>
            END
            ,c_returnerrormax = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.returnErrorMax}
            </foreach>
            END
            ,c_positionmax = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.positionMax}
            </foreach>
            END
            ,c_indicationerrorpermit = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.indicationErrorPermit}
            </foreach>
            END
            ,c_returnerrorpermit = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.returnErrorPermit}
            </foreach>
            END
            ,c_positionpermit = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.positionPermit}
            </foreach>
            END
            ,c_indicationerrorupper = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.indicationErrorUpper}
            </foreach>
            END
            ,c_returnerrorupper = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.returnErrorUpper}
            </foreach>
            END
            ,c_positionupper = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.positionUpper}
            </foreach>
            END
            ,c_indicationerrorupperpermit = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.indicationErrorUpperPermit}
            </foreach>
            END
            ,c_returnerrorupperpermit = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.returnErrorUpperPermit}
            </foreach>
            END
            ,c_positionupperpermit = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.positionUpperPermit}
            </foreach>
            END
            ,c_detectresult = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.detectResult}
            </foreach>
            END
            ,c_detectlevel = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.detectLevel}
            </foreach>
            END
            ,c_remark = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.remark}
            </foreach>
            END
            ,c_inspector = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.inspector}
            </foreach>
            END
            ,c_verifier = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.verifier}
            </foreach>
            END
            ,c_approver = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.approver}
            </foreach>
            END
            ,c_detecttime = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.detectTime}
            </foreach>
            END
            ,c_checkstep = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.checkStep}
            </foreach>
            END
            ,c_resultid = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.resultId}
            </foreach>
            END
            ,c_metername = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterName}
            </foreach>
            END
            ,c_metertype = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.meterType}
            </foreach>
            END
            ,c_resultfile = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.resultFile}
            </foreach>
            END
            ,c_recordfile = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.recordFile}
            </foreach>
            END
            ,c_imgpath1 = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.imgPath1}
            </foreach>
            END
            ,c_imgpath2 = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.imgPath2}
            </foreach>
            END
            ,c_imgpath3 = CASE c_id
            <foreach collection="pgRecords" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.imgPath3}
            </foreach>
            END
        WHERE c_id IN
        <foreach collection="pgRecords" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>

    <insert id="insertOrUpdate" parameterType="com.bjj.detect.entity.PgRecord">
        INSERT INTO t_pgrecord
            (c_id,c_createtime,c_mid,c_detectcode,c_metercustomer,c_metercode,c_meterrangel,c_meterrangeh,c_meterresolution,c_meterdivisionno,c_meterfactory,c_sname,c_scode,c_srangel,c_srangeh,c_sresolution,c_standardmedium,c_standardloc,c_sedate,c_sbasis,c_stemperature,c_shumidity,c_sregulatecode,c_sfactory,c_sregulatebcode,c_sbdate,c_appearance,c_pointer,c_indicationerrormax,c_returnerrormax,c_positionmax,c_indicationerrorpermit,c_returnerrorpermit,c_positionpermit,c_indicationerrorupper,c_returnerrorupper,c_positionupper,c_indicationerrorupperpermit,c_returnerrorupperpermit,c_positionupperpermit,c_detectresult,c_detectlevel,c_remark,c_inspector,c_verifier,c_approver,c_detecttime,c_checkstep,c_resultid,c_metername,c_metertype,c_resultfile,c_recordfile,c_imgpath1,c_imgpath2,c_imgpath3)
        VALUES
            (#{id},#{createTime},#{mid},#{detectCode},#{meterCustomer},#{meterCode},#{meterRangeL},#{meterRangeH},#{meterResolution},#{meterDivisionNo},#{meterFactory},#{sname},#{scode},#{sRangeL},#{sRangeH},#{sResolution},#{standardMedium},#{standardLoc},#{sEdate},#{sBasis},#{sTemperature},#{sHumidity},#{sRegulateCode},#{sFactory},#{sRegulateBcode},#{sBdate},#{appearance},#{pointer},#{indicationErrorMax},#{returnErrorMax},#{positionMax},#{indicationErrorPermit},#{returnErrorPermit},#{positionPermit},#{indicationErrorUpper},#{returnErrorUpper},#{positionUpper},#{indicationErrorUpperPermit},#{returnErrorUpperPermit},#{positionUpperPermit},#{detectResult},#{detectLevel},#{remark},#{inspector},#{verifier},#{approver},#{detectTime},#{checkStep},#{resultId},#{meterName},#{meterType},#{resultFile},#{recordFile},#{imgPath1},#{imgPath2},#{imgPath3})
        ON DUPLICATE KEY UPDATE
            c_mid=#{mid},c_detectcode=#{detectCode},c_metercustomer=#{meterCustomer},c_metercode=#{meterCode},c_meterrangel=#{meterRangeL},c_meterrangeh=#{meterRangeH},c_meterresolution=#{meterResolution},c_meterdivisionno=#{meterDivisionNo},c_meterfactory=#{meterFactory},c_sname=#{sname},c_scode=#{scode},c_srangel=#{sRangeL},c_srangeh=#{sRangeH},c_sresolution=#{sResolution},c_standardmedium=#{standardMedium},c_standardloc=#{standardLoc},c_sedate=#{sEdate},c_sbasis=#{sBasis},c_stemperature=#{sTemperature},c_shumidity=#{sHumidity},c_sregulatecode=#{sRegulateCode},c_sfactory=#{sFactory},c_sregulatebcode=#{sRegulateBcode},c_sbdate=#{sBdate},c_appearance=#{appearance},c_pointer=#{pointer},c_indicationerrormax=#{indicationErrorMax},c_returnerrormax=#{returnErrorMax},c_positionmax=#{positionMax},c_indicationerrorpermit=#{indicationErrorPermit},c_returnerrorpermit=#{returnErrorPermit},c_positionpermit=#{positionPermit},c_indicationerrorupper=#{indicationErrorUpper},c_returnerrorupper=#{returnErrorUpper},c_positionupper=#{positionUpper},c_indicationerrorupperpermit=#{indicationErrorUpperPermit},c_returnerrorupperpermit=#{returnErrorUpperPermit},c_positionupperpermit=#{positionUpperPermit},c_detectresult=#{detectResult},c_detectlevel=#{detectLevel},c_remark=#{remark},c_inspector=#{inspector},c_verifier=#{verifier},c_approver=#{approver},c_detecttime=#{detectTime},c_checkstep=#{checkStep},c_resultid=#{resultId},c_metername=#{meterName},c_metertype=#{meterType},c_resultfile=#{resultFile},c_recordfile=#{recordFile},c_imgpath1=#{imgPath1},c_imgpath2=#{imgPath2},c_imgpath3=#{imgPath3}
    </insert>

    <insert id="insertOrUpdateAll" parameterType="java.util.List">
        INSERT INTO t_pgrecord
            (c_id,c_createtime,c_mid,c_detectcode,c_metercustomer,c_metercode,c_meterrangel,c_meterrangeh,c_meterresolution,c_meterdivisionno,c_meterfactory,c_sname,c_scode,c_srangel,c_srangeh,c_sresolution,c_standardmedium,c_standardloc,c_sedate,c_sbasis,c_stemperature,c_shumidity,c_sregulatecode,c_sfactory,c_sregulatebcode,c_sbdate,c_appearance,c_pointer,c_indicationerrormax,c_returnerrormax,c_positionmax,c_indicationerrorpermit,c_returnerrorpermit,c_positionpermit,c_indicationerrorupper,c_returnerrorupper,c_positionupper,c_indicationerrorupperpermit,c_returnerrorupperpermit,c_positionupperpermit,c_detectresult,c_detectlevel,c_remark,c_inspector,c_verifier,c_approver,c_detecttime,c_checkstep,c_resultid,c_metername,c_metertype,c_resultfile,c_recordfile,c_imgpath1,c_imgpath2,c_imgpath3)
        VALUES
        <foreach collection="pgRecords" item="item" separator=",">
            (#{item.id},#{item.createTime},#{item.mid},#{item.detectCode},#{item.meterCustomer},#{item.meterCode},#{item.meterRangeL},#{item.meterRangeH},#{item.meterResolution},#{item.meterDivisionNo},#{item.meterFactory},#{item.sname},#{item.scode},#{item.sRangeL},#{item.sRangeH},#{item.sResolution},#{item.standardMedium},#{item.standardLoc},#{item.sEdate},#{item.sBasis},#{item.sTemperature},#{item.sHumidity},#{item.sRegulateCode},#{item.sFactory},#{item.sRegulateBcode},#{item.sBdate},#{item.appearance},#{item.pointer},#{item.indicationErrorMax},#{item.returnErrorMax},#{item.positionMax},#{item.indicationErrorPermit},#{item.returnErrorPermit},#{item.positionPermit},#{item.indicationErrorUpper},#{item.returnErrorUpper},#{item.positionUpper},#{item.indicationErrorUpperPermit},#{item.returnErrorUpperPermit},#{item.positionUpperPermit},#{item.detectResult},#{item.detectLevel},#{item.remark},#{item.inspector},#{item.verifier},#{item.approver},#{item.detectTime},#{item.checkStep},#{item.resultId},#{item.meterName},#{item.meterType},#{item.resultFile},#{item.recordFile},#{item.imgPath1},#{item.imgPath2},#{item.imgPath3})
        </foreach>
        ON DUPLICATE KEY UPDATE
            c_mid=VALUES(c_mid),c_detectcode=VALUES(c_detectcode),c_metercustomer=VALUES(c_metercustomer),c_metercode=VALUES(c_metercode),c_meterrangel=VALUES(c_meterrangel),c_meterrangeh=VALUES(c_meterrangeh),c_meterresolution=VALUES(c_meterresolution),c_meterdivisionno=VALUES(c_meterdivisionno),c_meterfactory=VALUES(c_meterfactory),c_sname=VALUES(c_sname),c_scode=VALUES(c_scode),c_srangel=VALUES(c_srangel),c_srangeh=VALUES(c_srangeh),c_sresolution=VALUES(c_sresolution),c_standardmedium=VALUES(c_standardmedium),c_standardloc=VALUES(c_standardloc),c_sedate=VALUES(c_sedate),c_sbasis=VALUES(c_sbasis),c_stemperature=VALUES(c_stemperature),c_shumidity=VALUES(c_shumidity),c_sregulatecode=VALUES(c_sregulatecode),c_sfactory=VALUES(c_sfactory),c_sregulatebcode=VALUES(c_sregulatebcode),c_sbdate=VALUES(c_sbdate),c_appearance=VALUES(c_appearance),c_pointer=VALUES(c_pointer),c_indicationerrormax=VALUES(c_indicationerrormax),c_returnerrormax=VALUES(c_returnerrormax),c_positionmax=VALUES(c_positionmax),c_indicationerrorpermit=VALUES(c_indicationerrorpermit),c_returnerrorpermit=VALUES(c_returnerrorpermit),c_positionpermit=VALUES(c_positionpermit),c_indicationerrorupper=VALUES(c_indicationerrorupper),c_returnerrorupper=VALUES(c_returnerrorupper),c_positionupper=VALUES(c_positionupper),c_indicationerrorupperpermit=VALUES(c_indicationerrorupperpermit),c_returnerrorupperpermit=VALUES(c_returnerrorupperpermit),c_positionupperpermit=VALUES(c_positionupperpermit),c_detectresult=VALUES(c_detectresult),c_detectlevel=VALUES(c_detectlevel),c_remark=VALUES(c_remark),c_inspector=VALUES(c_inspector),c_verifier=VALUES(c_verifier),c_approver=VALUES(c_approver),c_detecttime=VALUES(c_detecttime),c_checkstep=VALUES(c_checkstep),c_resultid=VALUES(c_resultid),c_metername=VALUES(c_metername),c_metertype=VALUES(c_metertype),c_resultfile=VALUES(c_resultfile),c_recordfile=VALUES(c_recordfile),c_imgpath1=VALUES(c_imgpath1),c_imgpath2=VALUES(c_imgpath2),c_imgpath3=VALUES(c_imgpath3)
    </insert>

    <delete id="delete">
        DELETE FROM t_pgrecord
        WHERE c_id=#{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_pgrecord
        WHERE c_id IN
        <foreach collection="pgRecords" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </delete>

    <delete id="deleteById">
        DELETE FROM t_pgrecord
        WHERE c_id=#{id}
    </delete>

    <delete id="deleteAllByIds">
        DELETE FROM t_pgrecord
        WHERE c_id IN
        <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteByQuery">
        ${sql}
    </delete>

    <delete id="deleteByProperty">
        DELETE FROM t_pgrecord WHERE c_${propertyName} = #{value}
    </delete>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(c_id) FROM t_pgrecord
    </select>

    <select id="countByProperty" resultType="java.lang.Integer">
        SELECT COUNT(c_id) FROM t_pgrecord WHERE c_${propertyName} = #{value}
    </select>

    <select id="countByQuery" resultType="java.lang.Integer">
        ${sql}
    </select>

    <select id="get" resultMap="pgRecordDefaultMapping">
        SELECT * FROM t_pgrecord
    </select>

    <select id="getByProperty" resultMap="pgRecordDefaultMapping">
        SELECT * FROM t_pgrecord WHERE c_${propertyName} = #{value}
    </select>
    <select id="getById" resultMap="pgRecordDefaultMapping">
        SELECT * FROM t_pgrecord
        WHERE c_id=#{id}
    </select>

    <select id="getByQuery" resultMap="pgRecordDefaultMapping">
        ${sql}
    </select>

    <!--</editor-fold>-->

</mapper>
