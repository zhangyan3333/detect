<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjj.detect.dao.OrganizationDao">

    <!--<editor-fold desc="ResultMap区，此为代码自动生成区，为防止您的代码丢失，请勿在此区域内添加手动代码">-->

    <resultMap id="organizationDefaultMapping" type="com.bjj.detect.entity.Organization">
        <result column="c_id" property="id"/>
        <result column="c_createtime" property="createTime"/>
        <result column="c_parentid" property="parentId"/>
        <result column="c_name" property="name"/>
        <result column="c_type" property="type"/>
        <result column="c_path" property="path"/>
    </resultMap>

    <!--</editor-fold>-->

    <!--<editor-fold desc="Sql区，此为代码自动生成区，为防止您的代码丢失，请勿在此区域内添加手动代码">-->

    <insert id="insert" parameterType="com.bjj.detect.entity.Organization">
        INSERT INTO t_organization
            (c_id,c_createtime,c_parentid,c_name,c_type,c_path)
        VALUES
            (#{id},#{createTime},#{parentId},#{name},#{type},#{path})
    </insert>

    <insert id="insertAll" parameterType="java.util.List">
        INSERT INTO t_organization
            (c_id,c_createtime,c_parentid,c_name,c_type,c_path)
        VALUES
        <foreach collection="organizations" item="item" separator=",">
            (#{item.id},#{item.createTime},#{item.parentId},#{item.name},#{item.type},#{item.path})
        </foreach>
    </insert>

    <update id="update" parameterType="com.bjj.detect.entity.Organization">
        UPDATE t_organization
        SET c_parentid=#{parentId},c_name=#{name},c_type=#{type},c_path=#{path}
        WHERE c_id=#{id}
    </update>

    <update id="updateAll" parameterType="java.util.List">
        UPDATE t_organization SET 
            c_parentid = CASE c_id
            <foreach collection="organizations" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.parentId}
            </foreach>
            END
            ,c_name = CASE c_id
            <foreach collection="organizations" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.name}
            </foreach>
            END
            ,c_type = CASE c_id
            <foreach collection="organizations" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.type}
            </foreach>
            END
            ,c_path = CASE c_id
            <foreach collection="organizations" item="item" separator=" ">
                WHEN #{item.id} THEN #{item.path}
            </foreach>
            END
        WHERE c_id IN
        <foreach collection="organizations" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </update>

    <insert id="insertOrUpdate" parameterType="com.bjj.detect.entity.Organization">
        INSERT INTO t_organization
            (c_id,c_createtime,c_parentid,c_name,c_type,c_path)
        VALUES
            (#{id},#{createTime},#{parentId},#{name},#{type},#{path})
        ON DUPLICATE KEY UPDATE
            c_parentid=#{parentId},c_name=#{name},c_type=#{type},c_path=#{path}
    </insert>

    <insert id="insertOrUpdateAll" parameterType="java.util.List">
        INSERT INTO t_organization
            (c_id,c_createtime,c_parentid,c_name,c_type,c_path)
        VALUES
        <foreach collection="organizations" item="item" separator=",">
            (#{item.id},#{item.createTime},#{item.parentId},#{item.name},#{item.type},#{item.path})
        </foreach>
        ON DUPLICATE KEY UPDATE
            c_parentid=VALUES(c_parentid),c_name=VALUES(c_name),c_type=VALUES(c_type),c_path=VALUES(c_path)
    </insert>

    <delete id="delete">
        DELETE FROM t_organization
        WHERE c_id=#{id}
    </delete>

    <delete id="deleteAll">
        DELETE FROM t_organization
        WHERE c_id IN
        <foreach collection="organizations" item="item" separator="," open="(" close=")">
            #{item.id}
        </foreach>
    </delete>

    <delete id="deleteById">
        DELETE FROM t_organization
        WHERE c_id=#{id}
    </delete>

    <delete id="deleteAllByIds">
        DELETE FROM t_organization
        WHERE c_id IN
        <foreach collection="ids" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteByQuery">
        ${sql}
    </delete>

    <delete id="deleteByProperty">
        DELETE FROM t_organization WHERE c_${propertyName} = #{value}
    </delete>

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(c_id) FROM t_organization
    </select>

    <select id="countByProperty" resultType="java.lang.Integer">
        SELECT COUNT(c_id) FROM t_organization WHERE c_${propertyName} = #{value}
    </select>

    <select id="countByQuery" resultType="java.lang.Integer">
        ${sql}
    </select>

    <select id="get" resultMap="organizationDefaultMapping">
        SELECT * FROM t_organization
    </select>

    <select id="getByProperty" resultMap="organizationDefaultMapping">
        SELECT * FROM t_organization WHERE c_${propertyName} = #{value}
    </select>
    <select id="getById" resultMap="organizationDefaultMapping">
        SELECT * FROM t_organization
        WHERE c_id=#{id}
    </select>

    <select id="getByQuery" resultMap="organizationDefaultMapping">
        ${sql}
    </select>

    <!--</editor-fold>-->

</mapper>
